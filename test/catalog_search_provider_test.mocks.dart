// Mocks generated by Mockito 5.4.4 from annotations
// in piton_books/test/catalog_search_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:piton_books/models/category_model.dart' as _i5;
import 'package:piton_books/models/product_model.dart' as _i2;
import 'package:piton_books/services/catalog_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProduct_0 extends _i1.SmartFake implements _i2.Product {
  _FakeProduct_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CatalogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatalogService extends _i1.Mock implements _i3.CatalogService {
  MockCatalogService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Category>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Category>>.value(<_i5.Category>[]),
      ) as _i4.Future<List<_i5.Category>>);

  @override
  _i4.Future<List<_i2.Product>> getProductsByCategory(int? categoryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCategory,
          [categoryId],
        ),
        returnValue: _i4.Future<List<_i2.Product>>.value(<_i2.Product>[]),
      ) as _i4.Future<List<_i2.Product>>);

  @override
  _i4.Future<void> addToFavorites(
    int? userId,
    int? productId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorites,
          [
            userId,
            productId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeFromFavorites(
    int? userId,
    int? productId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorites,
          [
            userId,
            productId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i2.Product>> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Product>>.value(<_i2.Product>[]),
      ) as _i4.Future<List<_i2.Product>>);

  @override
  _i4.Future<String?> fetchSummary(int? productId) => (super.noSuchMethod(
        Invocation.method(
          #fetchSummary,
          [productId],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i2.Product> getProductById(int? productId) => (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [productId],
        ),
        returnValue: _i4.Future<_i2.Product>.value(_FakeProduct_0(
          this,
          Invocation.method(
            #getProductById,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.Product>);
}
